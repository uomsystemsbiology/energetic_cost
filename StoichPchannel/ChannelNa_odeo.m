
function [mtty] = ChannelNa_odeo(mttx,mttu,mttt,mttpar);
## [mtty] = ChannelNa_odeo(mttx,mttu,mttt,mttpar);
## System ChannelNa, representation odeo, language m; 
## File ChannelNa_odeo.m; 
## Generated by MTT on Wed Feb 11 15:44:52 AEDT 2015; 

## Horrible fudge to make mtt_m2p work
global ...
mtt_no_globals ;

## Parameters 
   f 	= mttpar(1);
   k_ch 	= mttpar(2);
   k_cm 	= mttpar(3);
   k_oh 	= mttpar(4);
   k_om 	= mttpar(5);
   k_n 	= mttpar(6);
   rt 	= mttpar(7);
   v_gh 	= mttpar(8);
   v_gm 	= mttpar(9);
   kappa_n 	= mttpar(10);
   v_n 	= mttpar(11);
   z 	= mttpar(12);

## States 
mttx1 = mttx(1) ;
mttx2 = mttx(2) ;
mttx3 = mttx(3) ;
mttx4 = mttx(4) ;
mttx5 = mttx(5) ;
mttx6 = mttx(6) ;

## Inputs 
mttu1 = mttu(1);

## Unknown Inputs 

   mtty = zeros(2,1);

## BEGIN Code

## Code
  mtty(1) = (e**((f*mttu1*z)/rt)*ghk_fun(mttu1,v_n)*f*k_n*kappa_n*mttx2**3* \
  mttx3*mttx5*v_gh*v_gm*z + e**(mttu1/v_gh)*mma_cr(3,mttu1)*k_ch*mttx3*rt*v_gm + e \
**(mttu1/v_gh)*mma_cr(3,mttu1)*k_ch*mttx3*v_gh*v_gm + e**(mttu1/v_gm)*mma_cr(2, \
  mttu1)*k_cm*mttx1*rt*v_gh + e**(mttu1/v_gm)*mma_cr(2,mttu1)*k_cm*mttx1*v_gh*v_gm \
 - ghk_fun(mttu1,v_n)*f*k_n*kappa_n*mttx2**3*mttx3*mttx6*v_gh*v_gm*z - mma_cr(3, \
  mttu1)*k_oh*mttx4*rt*v_gm - mma_cr(3,mttu1)*k_oh*mttx4*v_gh*v_gm - mma_cr(2, \
  mttu1)*k_om*mttx2*rt*v_gh - mma_cr(2,mttu1)*k_om*mttx2*v_gh*v_gm)/(v_gh*v_gm);
  mtty(2) = ghk_fun(mttu1,v_n)*k_n*kappa_n*mttx2**3*mttx3*(e**((f*mttu1*z)/rt)* \
  mttx5 - mttx6);
## END Code
endfunction
