head	1.14;
access;
symbols;
locks; strict;
comment	@// @;


1.14
date	2015.03.16.01.44.21;	author peterg;	state Exp;
branches;
next	1.13;

1.13
date	2015.03.12.22.09.29;	author peterg;	state Exp;
branches;
next	1.12;

1.12
date	2015.03.12.03.49.51;	author peterg;	state Exp;
branches;
next	1.11;

1.11
date	2015.03.12.03.15.41;	author peterg;	state Exp;
branches;
next	1.10;

1.10
date	2015.03.12.02.36.41;	author peterg;	state Exp;
branches;
next	1.9;

1.9
date	2015.03.11.04.24.08;	author peterg;	state Exp;
branches;
next	1.8;

1.8
date	2015.03.11.01.31.34;	author peterg;	state Exp;
branches;
next	1.7;

1.7
date	2015.03.11.01.19.14;	author peterg;	state Exp;
branches;
next	1.6;

1.6
date	2015.02.27.01.13.18;	author peterg;	state Exp;
branches;
next	1.5;

1.5
date	2015.02.27.00.49.01;	author peterg;	state Exp;
branches;
next	1.4;

1.4
date	2015.02.26.04.13.05;	author peterg;	state Exp;
branches;
next	1.3;

1.3
date	2015.02.26.01.20.31;	author peterg;	state Exp;
branches;
next	1.2;

1.2
date	2015.02.10.02.34.32;	author peterg;	state Exp;
branches;
next	1.1;

1.1
date	2015.02.10.02.20.32;	author peterg;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Depolarise
@
text
@Setpath;
Setplot;

[rtf R F_0] = RTF;
V_N = RTF*1000;		# Nernst voltage in mv

last = 50;
depolarisation = 7;		# mV
depolarisation = 15;		# mV
##  depolarisation = 50;		# mV
depolarisation = 60;		# mV
##depolarisation = 10;		# mV
## depolarisation = 80;		# mV

t = [0:0.01:last];
i_fix = [4;5;10;11];

par = HH_numpar;		# Parameters
sympar = HH_sympar;		# Symbolic parameters

##HH = par(sympar.HH)

K_k = par(sympar.K_k)
K_n = par(sympar.K_n)

V_eq_0 = par(sympar.V_eq)
C_m = par(sympar.C_m);
RT = par(sympar.RT);
F = par(sympar.F);
kappa_k = par(sympar.kappa_k);
kappa_n = par(sympar.kappa_n);
g_l = par(sympar.g_l);
v_k = par(sympar.v_k);
v_n = par(sympar.v_n);
v_l = par(sympar.v_l)

HH=0;
if HH
  name = "GHK_HH";
else
  name = "GHK";
endif

Name = sprintf("%s",name);

## Initial conditions
x_i_k = 397/K_k;		# mM
x_e_k = 20/K_k;			# mM

x_i_n = 50/K_n;			# mM
x_e_n = 437/K_n;		# mM

## [dx gate_K_x_0] = mk_cr (0,V_eq);
## [dx gate_Na_1_x_0] = mn_cr1 (0,V_eq)
## [dx gate_Na_2_x_0] = mn_cr2 (0,V_eq)

## GKH = ghk_fun(V_eq)

## i_k_0 = GKH*F*kappa_k*gate_K_x_0^4*K_k*(exp(V_eq/V_N)*x_i_k - x_e_k)
## i_n_0 = GKH*F*kappa_n*gate_Na_1_x_0^3*gate_Na_2_x_0*K_n*(exp(V_eq/V_N)*x_i_n - x_e_n)
## i_l_0 = -(i_k_0 + i_n_0)		# Equilibrium leakage

## V_l_0 = V_eq - i_l_0/g_l

## CHECK_v_l = norm(V_l_0-v_l)

## X_00_alt = [(V_eq_0)*C_m/F
##        (1-gate_K_x_0); gate_K_x_0; 
##        x_i_k; x_e_k; 
##        (1-gate_Na_1_x_0); gate_Na_1_x_0; 
##        gate_Na_2_x_0; (1-gate_Na_2_x_0);
##        x_i_n; x_e_n];

X_000 = [(V_eq_0)*C_m/F;0;1;x_i_k; x_e_k;0;1;0;1;x_i_n; x_e_n];

## Find initial steady state
i_fix_0 = [1;i_fix];
[x_00 X_00 v_00] = stoich_sim ("HH","",0,X_000,i_fix_0);
V_eq = F*(X_00(1)/C_m)

##CHECK_X_00 = norm(X_00 - X_00_alt)

## Put in depolarisation
X_0 = X_00;
X_0(1) = X_0(1) + depolarisation*(C_m/F);

## X = lsode("HH_fun",X_0,t)';

## Y = [];
## for i = 1:length(t)
##   xx = zeros(4,1);			# Not needed
##   yy = 0;			# Not needed
##   y = HH_odeo(X(:,i),yy,t(i),par);
##   Y = [Y y];
## end

## V = Y(1,:);
[x X v] = stoich_sim ("HH","",t,X_0, i_fix);

FV = X(1,:)./(par(sympar.C_m)/F^2);
V = FV/F;
figure(10);
plot(t,V-V_eq)
grid;
xlabel("t (msec)");
ylabel("V-V_{eq}");
##axis([0 2 -100 150])
fig(Name,"V",2);

# figure(11);
# plot(t,exp(Y([3,5],:)/RT))
# grid;
# xlabel("t (msec)");
# ylabel("Gate");

## Channel currents 
I_k = F*v(2,:);
I_n = F*v(5,:);
I_l = F*v(6,:);
I = I_k + I_n + I_l;

## Gate currents
I_g = F*v([1 3 4],:);


figure(11);
plot(t,I);
grid;
xlabel("t (msec)");
ylabel("I_{net}");
fig(Name,"I_all",2);

figure(12);
plot(t,I_k,";K;",\
     t,I_n,";Na;",
     t,I_l,";L;");
grid;
xlabel("t (msec)");
ylabel("I");
fig(Name,"I",2);

figure(13);
plot(t,I_g(1,:),";m;",\
     t,I_g(2,:),";n;",
     t,I_g(3,:),";h;");
grid;
xlabel("t (msec)");
ylabel("I_g");
fig(Name,"I",2);

I_k_0 = F*v(2,1)
I_n_0 = F*v(5,1)
I_l_0 = v(6,1)

## if HH
##  V_k = v_k;
##  V_n = v_n;
## else
##  V_k = -77.251;
##  V_n = 56.045;
## endif

## g_k = I_k./(V-V_k);
## g_n = I_n./(V-V_n);
## one = ones(size(t));

## figure(14)
## plot(t,g_k,";K;",\
##      t,g_n,";Na;",\
##      t,g_l*one,";L;");
## grid;
## xlabel("t (msec)");
## ylabel("g");
## fig(Name,"g",2);

figure(15)
plot(t,X(3,:),";n(t);",\
     t,X(7,:),";m(t);",\
     t,X(8,:),";h(t);");
grid;
xlabel("t (msec)");
ylabel("n(t),m(t),h(t)");
fig(Name,"nmh",2);

## figure(16)
## plot(t,X(5,:)*K_k,";c_{ek};",\
##      t,X(11,:)*K_n,";c_{in};");
## grid;
## xlabel("t (msec)");
## ylabel("x");
## fig(Name,"x",2);

@


1.13
log
@Optionally recompute V_eq.
@
text
@d11 1
a11 1
depolarisation = 40;		# mV
@


1.12
log
@Zap u_HH
@
text
@d12 1
a12 1
##  depolarisation = 50;		# mV
d26 1
a26 1
V_eq = par(sympar.V_eq)
d35 1
a35 1
v_l = par(sympar.v_l);
d53 3
a55 3
[dx gate_K_x_0] = mk_cr (0,V_eq);
[dx gate_Na_1_x_0] = mn_cr1 (0,V_eq)
[dx gate_Na_2_x_0] = mn_cr2 (0,V_eq)
d57 1
a57 1
GKH = ghk_fun(V_eq)
d59 3
a61 3
i_k_0 = GKH*F*kappa_k*gate_K_x_0^4*K_k*(exp(V_eq/V_N)*x_i_k - x_e_k)
i_n_0 = GKH*F*kappa_n*gate_Na_1_x_0^3*gate_Na_2_x_0*K_n*(exp(V_eq/V_N)*x_i_n - x_e_n)
i_l_0 = -(i_k_0 + i_n_0)		# Equilibrium leakage
d63 1
a63 1
V_l_0 = V_eq - i_l_0/g_l
d65 1
a65 1
CHECK_v_l = norm(V_l_0-v_l)
d67 6
a72 6
X_00_alt = [(V_eq)*C_m/F
       (1-gate_K_x_0); gate_K_x_0; 
       x_i_k; x_e_k; 
       (1-gate_Na_1_x_0); gate_Na_1_x_0; 
       gate_Na_2_x_0; (1-gate_Na_2_x_0);
       x_i_n; x_e_n];
d74 1
a74 1
X_000 = [(V_eq)*C_m/F;0;1;x_i_k; x_e_k;0;1;0;1;x_i_n; x_e_n];
d79 1
d81 1
a81 1
CHECK_X_00 = norm(X_00 - X_00_alt)
@


1.11
log
@WORKING VERSION
@
text
@d44 1
a44 1
Name = sprintf("%s%i",name,u_HH)
@


1.10
log
@WORKING VERSION
@
text
@a0 1
global global_numpar
d7 3
a9 10
if !exist("u_HH")
  u_HH = 0;			# muA
end

global_numpar.u_hh = u_HH;

if (u_HH==0)
  last = 20;
  depolarisation = 7;		# mV
  depolarisation = 15;		# mV
d11 1
a11 1
depolarisation = 0;		# mV
a13 4
else
  last = 200;
  depolarisation = 0;		# mV
endif
a96 1

@


1.9
log
@WORKING VERSION with equilibrium.
@
text
@a7 4
## Steady-state stuff
##Channel_props;


d17 3
a19 2
  depolarisation = 50;		# mV
depolarisation = 40;		# mV
d38 1
a38 1
V_eq = par(sympar.V_eq);
@


1.8
log
@Working version
@
text
@d19 4
a22 2
  last = 10;
  depolarisation = 40;		# mV
d82 1
a82 1
X_00 = [(V_eq)*C_m/F
d90 1
d92 6
a97 1
##[x_00 X_00 v_00] = stoich_sim ("HH","",0,X_00,i_fix);
d99 1
a99 1
 X_0(1) = X_0(1) + depolarisation*(C_m/F);
@


1.7
log
@WORKING VERSIONS.
@
text
@d87 1
a87 1
X_000 = [1;1;1;x_i_k; x_e_k;1;1;1;1;x_i_n; x_e_n]
d89 1
a89 1
[x_00 X_00 v_00] = stoich_sim ("HH","",0,X_00,i_fix);
@


1.6
log
@Gate current.
@
text
@d20 1
a20 1
##  depolarisation = 15;		# mV
d22 1
a22 1
  depolarisation = 80;		# mV
d29 1
d60 1
a60 1
x_i_k = 397/K_k;			# mM
d64 1
a64 1
x_e_n = 437/K_n;			# mM
d80 1
a80 1
X_0 = [(V_eq+depolarisation)*C_m/F
d87 6
d105 1
a105 1
[x X v] = stoich_sim ("HH","",t,X_0);
@


1.5
log
@WORKING VERSION with chemo-electric flows.
@
text
@d116 1
a116 1

d119 1
a119 1
I_l = v(6,:);
d122 11
d135 2
a136 2
     t,I_n,";Na;")
##     t,I_l,";L;");
d142 4
a145 2
figure(11);
plot(t,I);
d148 2
a149 8
ylabel("I_{net}");
fig(Name,"I_all",2);

## figure(13);
## plot(t,I_l,";L;");
## grid;
## xlabel("t (msec)");
## ylabel("I");
@


1.4
log
@WORKING VERSIONS with new V_g
@
text
@d79 1
a79 1
X_0 = [(V_eq+depolarisation)*C_m
d100 2
a101 2
V = X(1,:)./par(sympar.C_m);

@


1.3
log
@WORKING VERSION
@
text
@d1 1
a1 1
global U_HH			# Input (muA)
d16 1
a16 1
U_HH = u_HH;
d20 3
a22 2
  ##depolarisation = 15;		# mV
  depolarisation = 50;		# mV
d24 1
a24 1
  last = 60;
d169 8
a176 8
## figure(15)
## plot(t,X(3,:),";n(t);",\
##      t,X(7,:),";m(t);",\
##      t,X(8,:),";h(t);");
## grid;
## xlabel("t (msec)");
## ylabel("n(t),m(t),h(t)");
## fig(Name,"nmh",2);
@


1.2
log
@Total I.
@
text
@d19 3
a21 2
  last = 6;
  depolarisation = 15;		# mV
a28 1

d32 1
a32 1
HH = par(sympar.HH)
d48 1
d65 2
a66 2
[dx gate_Na_1_x_0] = mn_cr1 (0,V_eq);
[dx gate_Na_2_x_0] = mn_cr2 (0,V_eq);
d79 17
a95 2
       gate_K_x_0; x_i_k; x_e_k; 
       gate_Na_1_x_0; gate_Na_2_x_0; x_i_n; x_e_n];
d97 1
a97 1
X = lsode("HH_fun",X_0,t)';
d99 1
a99 7
Y = [];
for i = 1:length(t)
  xx = zeros(4,1);			# Not needed
  yy = 0;			# Not needed
  y = HH_odeo(X(:,i),yy,t(i),par);
  Y = [Y y];
end
a100 1
V = Y(1,:);
d106 1
d116 3
a118 3
I_k = F*Y(2,:);
I_n = F*Y(3,:);
I_l = Y(4,:);
d123 2
a124 2
     t,I_n,";Na;",\
     t,I_l,";L;");
d137 47
a183 47
figure(13);
plot(t,I_l,";L;");
grid;
xlabel("t (msec)");
ylabel("I");

I_k_0 = F*Y(2,1)
I_n_0 = F*Y(3,1)
I_l_0 = Y(4,1)

if HH
 V_k = v_k;
 V_n = v_n;
else
 V_k = -77.251;
 V_n = 56.045;
endif

g_k = I_k./(V-V_k);
g_n = I_n./(V-V_n);
one = ones(size(t));

figure(14)
plot(t,g_k,";K;",\
     t,g_n,";Na;",\
     t,g_l*one,";L;");
grid;
xlabel("t (msec)");
ylabel("g");
fig(Name,"g",2);

figure(15)
plot(t,X(2,:),";n(t);",\
     t,X(5,:),";m(t);",\
     t,X(6,:),";h(t);");
grid;
xlabel("t (msec)");
ylabel("n(t),m(t),h(t)");
fig(Name,"nmh",2);

figure(16)
plot(t,X(4,:)*K_k,";c_{ek};",\
     t,X(7,:)*K_n,";c_{in};");
grid;
xlabel("t (msec)");
ylabel("x");
fig(Name,"x",2);
@


1.1
log
@Initial revision
@
text
@d109 1
d119 7
@
