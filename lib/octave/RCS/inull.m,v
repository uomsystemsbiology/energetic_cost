head	1.5;
access;
symbols;
locks; strict;
comment	@// @;


1.5
date	2015.01.20.02.25.06;	author peterg;	state Exp;
branches;
next	1.4;

1.4
date	2014.12.09.23.41.37;	author peterg;	state Exp;
branches;
next	1.3;

1.3
date	2014.12.09.23.35.00;	author peterg;	state Exp;
branches;
next	1.2;

1.2
date	2014.12.09.23.19.11;	author peterg;	state Exp;
branches;
next	1.1;

1.1
date	2014.12.09.22.33.12;	author peterg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Don't remultiply.
@
text
@function Z = inull (A)
	 
  ## usage: Z = inull (A)
  ## Z is a null matrix with integer entries
  ## Used for stoichiometric analysis
  ## See stoich2null

  tol = 1000*eps;

  [m,n] = size(A);	 
  [R,pivcol] = rref(A);

  r = length(pivcol);
  nopiv = 1:n;
  nopiv(pivcol) = [];
  Z = zeros(n,n-r,class(A));
  if n > r
    Z(nopiv,:) = eye(n-r,n-r,class(A));
    if r > 0
      Z(pivcol,:) = -R(1:r,nopiv);
    endif
  endif

  ## Make it integer (??)
  minval = min(min(abs(Z)+(abs(Z)<tol)));
  ## if (abs(minval-1)>tol)
  ##    warning(sprintf("inull: min value = %g, multiplying by %g",minval,1/minval));
  ##    Z = Z/minval;
  ## endif
  
  if (abs(minval-1)>tol)
    warning(sprintf("inull: min value = %g",minval));
   endif

  discrepancy = norm(Z-round(Z));
  if discrepancy>tol
     warning("inull: non-integer matrix returned - discrepancy %g", discrepancy);
  endif

endfunction
@


1.4
log
@Fixed sanity checks.
@
text
@d26 5
d32 2
a33 3
     warning(sprintf("inull: min value = %g, multiplying by %g",minval,1/minval));
     Z = Z/minval;
  endif
@


1.3
log
@Sanity checks.
@
text
@d8 2
d25 2
a26 3
  minval = min(min(abs(Z)+(Z==0)));

  if (minval<1)
d32 1
a32 1
  if discrepancy>100*eps
@


1.2
log
@Make integer.
@
text
@d30 5
@


1.1
log
@Initial revision
@
text
@d22 8
@
